buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.1'
        classpath 'com.jakewharton.hugo:hugo-plugin:1.1.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'hugo'

repositories {
    jcenter()
}

def versionMajor = 1
def versionMinor = 2
def versionPatch = 0
def versionBuild = 0
def version_Code = 0
def versionPropsFile = file('version.properties')
def Properties versionProps = new Properties()
if (versionPropsFile.canRead()) {
    versionProps.load(new FileInputStream(versionPropsFile))
    def value = 0
    def runTasks = gradle.startParameter.taskNames
    if ('assemble' in runTasks || 'assembleRelease' in runTasks || 'aR' in runTasks) {
        value = 1
    }

    // Manifest version information!
    versionPatch = versionProps['VERSION_PATCH'].toInteger() + value
    versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
    version_Code = versionProps['VERSION_CODE'].toInteger() + value
} else {
    throw new GradleException("Could not read version.properties!")
}
if (versionPropsFile.canWrite()) {
    versionProps['VERSION_PATCH'] = versionPatch.toString()
    versionProps['VERSION_BUILD'] = versionBuild.toString()
    versionProps['VERSION_CODE'] = version_Code.toString()
    versionProps.store(versionPropsFile.newWriter(), null)
} else {
    throw new GradleException("Could not write version.properties!");
}
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "com.genesys.gms.mobile.callback.demo.legacy"
        minSdkVersion 21
        targetSdkVersion 22
        versionCode version_Code
        versionName "${versionMajor}.${versionMinor}.${versionPatch}.${versionBuild}"
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
        }

        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:22.1.1'
    compile 'com.android.support:support-v13:21.0.0'
    compile 'com.android.support:appcompat-v7:22.1.1'
    compile 'com.google.android.gms:play-services-gcm:7.3.0'
    compile 'com.astuetz:pagerslidingtabstrip:1.0.1'
    compile 'com.squareup.dagger:dagger:1.2.0'
    provided 'com.squareup.dagger:dagger-compiler:1.2.0'
    compile 'joda-time:joda-time:2.7'
    compile 'com.squareup.okhttp:okhttp:2.2.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.2.0'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    debugCompile 'com.squareup.retrofit:retrofit-mock:1.9.0'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'org.slf4j:slf4j-api:1.7.0'
    compile('org.cometd.java:cometd-java-client:2.5.1') {
        exclude group: 'org.eclipse.jetty'
    }
    compile 'org.eclipse.jetty.aggregate:jetty-all:7.6.9.v20130131'
    compile 'com.jakewharton.timber:timber:2.5.0'
    compile project(':android-support-v4-preferencefragment')
}
